// <auto-generated />
using System;
using Carfaith.Infraestructura.AccesoDatos.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Carfaith.Infraestructura.AccesoDatos.Migrations
{
    [DbContext(typeof(CarfaithDbContext))]
    [Migration("20250727063151_AlterarTablaOrdenEgresoyDetalles")]
    partial class AlterarTablaOrdenEgresoyDetalles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleOrdenCompra", b =>
                {
                    b.Property<int>("IdDetalleOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_detalle_orden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrden"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("Id_orden");

                    b.Property<int?>("IdProductoProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Precio_unitario");

                    b.HasKey("IdDetalleOrden")
                        .HasName("PK__Detalle___05923E9FC7275972");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdProductoProveedor");

                    b.ToTable("Detalle_orden_compra", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleOrdenEgreso", b =>
                {
                    b.Property<int>("IdDetalleOrdenEgreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_detalle_orden_egreso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrdenEgreso"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    b.Property<int?>("OrdenEgresoId")
                        .HasColumnType("int")
                        .HasColumnName("Orden_egreso_id");

                    b.Property<string>("TipoEgreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int")
                        .HasColumnName("Ubicacion_id");

                    b.HasKey("IdDetalleOrdenEgreso")
                        .HasName("PK__Detalle___6B21310D7218CD36");

                    b.HasIndex("IdProductoProveedor");

                    b.HasIndex("OrdenEgresoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Detalle_orden_egreso", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleOrdenIngreso", b =>
                {
                    b.Property<int>("IdDetalleOrdenIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_detalle_orden_ingreso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrdenIngreso"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    b.Property<string>("NumeroLote")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("numero_lote");

                    b.Property<int?>("OrdenIngresoId")
                        .HasColumnType("int")
                        .HasColumnName("Orden_ingreso_id");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Precio_unitario");

                    b.Property<string>("TipoIngreso")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_ingreso");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int")
                        .HasColumnName("Ubicacion_id");

                    b.HasKey("IdDetalleOrdenIngreso")
                        .HasName("PK__Detalle___4A2B71A4EC7C2C48");

                    b.HasIndex("IdProductoProveedor");

                    b.HasIndex("OrdenIngresoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Detalle_orden_ingreso", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleTransferencia", b =>
                {
                    b.Property<int>("IdDetalleTransferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_detalle_transferencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleTransferencia"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    b.Property<int?>("IdTransferencia")
                        .HasColumnType("int")
                        .HasColumnName("Id_transferencia");

                    b.HasKey("IdDetalleTransferencia")
                        .HasName("PK__Detalle___595FCCF0C909F886");

                    b.HasIndex("IdProductoProveedor");

                    b.HasIndex("IdTransferencia");

                    b.ToTable("Detalle_transferencia", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.LineasDeProducto", b =>
                {
                    b.Property<int>("IdLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_linea");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLinea"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdLinea")
                        .HasName("PK__Lineas_d__CF744F1B011B9CEA");

                    b.ToTable("Lineas_de_Producto", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenDeCompra", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_orden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<string>("ArchivoPdf")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Archivo_pdf");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_creacion");

                    b.Property<DateOnly?>("FechaEstimadaEntrega")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_estimada_entrega");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_proveedor");

                    b.Property<string>("NumeroOrden")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Numero_orden");

                    b.HasKey("IdOrden")
                        .HasName("PK__Orden_de__33F95B581743FAF6");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Orden_de_compra", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenDeIngreso", b =>
                {
                    b.Property<int>("IdOrdenIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_orden_ingreso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdenIngreso"));

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdOrdenCompra")
                        .HasColumnType("int")
                        .HasColumnName("Id_orden_compra");

                    b.Property<string>("OrigenDeCompra")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Origen_de_compra");

                    b.HasKey("IdOrdenIngreso")
                        .HasName("PK__Orden_de__78798AE1D9CE5B46");

                    b.HasIndex("IdOrdenCompra");

                    b.ToTable("Orden_de_ingreso", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenEgreso", b =>
                {
                    b.Property<int>("IdOrdenEgreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_orden_egreso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdenEgreso"));

                    b.Property<string>("Destino")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.HasKey("IdOrdenEgreso")
                        .HasName("PK__Orden_eg__21C30FEBA07A17C6");

                    b.ToTable("Orden_egreso", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.PreciosHistoricos", b =>
                {
                    b.Property<int>("IdPreciosHistoricos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_precios_historicos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPreciosHistoricos"));

                    b.Property<DateOnly?>("FechaFinalizacion")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_finalizacion");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_inicio");

                    b.Property<int?>("IdProductoProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdPreciosHistoricos")
                        .HasName("PK__PreciosH__0578A7F607777C6B");

                    b.HasIndex("IdProductoProveedor");

                    b.ToTable("PreciosHistoricos");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CodigoProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_producto");

                    b.Property<int?>("LineaDeProducto")
                        .HasColumnType("int")
                        .HasColumnName("Linea_de_producto");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__1D8EFF01EF921852");

                    b.HasIndex("LineaDeProducto");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", b =>
                {
                    b.Property<int>("IdProductoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoProveedor"));

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_proveedor");

                    b.HasKey("IdProductoProveedor")
                        .HasName("PK__Producto__A0750A0C29A3249E");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Producto_Proveedor", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Proveedores", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("NombreProveedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PaisOrigen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PersonaContacto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ruc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoProveedor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__6704E5A8BC809F68");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Stock", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_stock");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductoProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_producto_proveedor");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int")
                        .HasColumnName("Id_ubicacion");

                    b.HasKey("IdStock")
                        .HasName("PK__Stock__3A39590A77516DD3");

                    b.HasIndex("IdProductoProveedor");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Transferencias", b =>
                {
                    b.Property<int>("IdTransferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_transferencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransferencia"));

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("UbicacionDestinoId")
                        .HasColumnType("int")
                        .HasColumnName("Ubicacion_destino_id");

                    b.Property<int?>("UbicacionOrigenId")
                        .HasColumnType("int")
                        .HasColumnName("Ubicacion_origen_id");

                    b.HasKey("IdTransferencia")
                        .HasName("PK__Transfer__749D659DE0C5161E");

                    b.HasIndex("UbicacionDestinoId");

                    b.HasIndex("UbicacionOrigenId");

                    b.ToTable("Transferencias");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_ubicacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<string>("LugarUbicacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Lugar_ubicacion");

                    b.HasKey("IdUbicacion")
                        .HasName("PK__Ubicacio__CFBBC8617A7EF099");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuarios__EF59F76266B4A2BA");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuarios__A9D10534609B768C")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleOrdenCompra", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.OrdenDeCompra", "IdOrdenNavigation")
                        .WithMany("DetalleOrdenCompras")
                        .HasForeignKey("IdOrden")
                        .HasConstraintName("FK__Detalle_o__Id_or__6D0D32F4");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", "IdProductoProveedorNavigation")
                        .WithMany("DetalleOrdenCompras")
                        .HasForeignKey("IdProductoProveedor")
                        .HasConstraintName("FK__Detalle_o__Id_pr__6E01572D");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdProductoProveedorNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleOrdenEgreso", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", "IdProductoProveedorNavigation")
                        .WithMany("DetalleOrdenEgresos")
                        .HasForeignKey("IdProductoProveedor")
                        .HasConstraintName("FK__Detalle_o__Id_pr__73BA3083");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.OrdenEgreso", "OrdenEgreso")
                        .WithMany("DetalleOrdenEgresos")
                        .HasForeignKey("OrdenEgresoId")
                        .HasConstraintName("FK__Detalle_o__Orden__72C60C4A");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", "Ubicacion")
                        .WithMany("DetalleOrdenEgresos")
                        .HasForeignKey("UbicacionId")
                        .HasConstraintName("FK__Detalle_o__Ubica__74AE54BC");

                    b.Navigation("IdProductoProveedorNavigation");

                    b.Navigation("OrdenEgreso");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleOrdenIngreso", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", "IdProductoProveedorNavigation")
                        .WithMany("DetalleOrdenIngresos")
                        .HasForeignKey("IdProductoProveedor")
                        .HasConstraintName("FK__Detalle_o__Id_pr__70DDC3D8");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.OrdenDeIngreso", "OrdenIngreso")
                        .WithMany("DetalleOrdenIngresos")
                        .HasForeignKey("OrdenIngresoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Detalle_o__Orden__6FE99F9F");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", "Ubicacion")
                        .WithMany("DetalleOrdenIngresos")
                        .HasForeignKey("UbicacionId")
                        .HasConstraintName("FK__Detalle_o__Ubica__71D1E811");

                    b.Navigation("IdProductoProveedorNavigation");

                    b.Navigation("OrdenIngreso");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.DetalleTransferencia", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", "IdProductoProveedorNavigation")
                        .WithMany("DetalleTransferencia")
                        .HasForeignKey("IdProductoProveedor")
                        .HasConstraintName("FK__Detalle_t__Id_pr__7A672E12");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Transferencias", "IdTransferenciaNavigation")
                        .WithMany("DetalleTransferencia")
                        .HasForeignKey("IdTransferencia")
                        .HasConstraintName("FK__Detalle_t__Id_tr__797309D9");

                    b.Navigation("IdProductoProveedorNavigation");

                    b.Navigation("IdTransferenciaNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenDeCompra", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Proveedores", "IdProveedorNavigation")
                        .WithMany("OrdenDeCompras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Orden_de___Id_pr__6C190EBB");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenDeIngreso", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.OrdenDeCompra", "IdOrdenCompraNavigation")
                        .WithMany("OrdenDeIngresos")
                        .HasForeignKey("IdOrdenCompra")
                        .HasConstraintName("FK__Orden_de___Id_or__6EF57B66");

                    b.Navigation("IdOrdenCompraNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.PreciosHistoricos", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", "IdProductoProveedorNavigation")
                        .WithMany("PreciosHistoricos")
                        .HasForeignKey("IdProductoProveedor")
                        .HasConstraintName("FK__PreciosHi__Id_pr__6B24EA82");

                    b.Navigation("IdProductoProveedorNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Producto", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.LineasDeProducto", "LineaDeProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("LineaDeProducto")
                        .HasConstraintName("FK__Producto__Linea___68487DD7");

                    b.Navigation("LineaDeProductoNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Producto", "IdProductoNavigation")
                        .WithMany("ProductoProveedors")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__Producto___Id_pr__693CA210");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Proveedores", "IdProveedorNavigation")
                        .WithMany("ProductoProveedors")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Producto___Id_pr__6A30C649");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Stock", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", "IdProductoProveedorNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProductoProveedor")
                        .HasConstraintName("FK__Stock__Id_produc__75A278F5");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK__Stock__Id_ubicac__76969D2E");

                    b.Navigation("IdProductoProveedorNavigation");

                    b.Navigation("IdUbicacionNavigation");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Transferencias", b =>
                {
                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", "UbicacionDestino")
                        .WithMany("TransferenciaUbicacionDestinos")
                        .HasForeignKey("UbicacionDestinoId")
                        .HasConstraintName("FK__Transfere__Ubica__787EE5A0");

                    b.HasOne("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", "UbicacionOrigen")
                        .WithMany("TransferenciaUbicacionOrigens")
                        .HasForeignKey("UbicacionOrigenId")
                        .HasConstraintName("FK__Transfere__Ubica__778AC167");

                    b.Navigation("UbicacionDestino");

                    b.Navigation("UbicacionOrigen");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.LineasDeProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenDeCompra", b =>
                {
                    b.Navigation("DetalleOrdenCompras");

                    b.Navigation("OrdenDeIngresos");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenDeIngreso", b =>
                {
                    b.Navigation("DetalleOrdenIngresos");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.OrdenEgreso", b =>
                {
                    b.Navigation("DetalleOrdenEgresos");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Producto", b =>
                {
                    b.Navigation("ProductoProveedors");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.ProductoProveedor", b =>
                {
                    b.Navigation("DetalleOrdenCompras");

                    b.Navigation("DetalleOrdenEgresos");

                    b.Navigation("DetalleOrdenIngresos");

                    b.Navigation("DetalleTransferencia");

                    b.Navigation("PreciosHistoricos");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Proveedores", b =>
                {
                    b.Navigation("OrdenDeCompras");

                    b.Navigation("ProductoProveedors");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Transferencias", b =>
                {
                    b.Navigation("DetalleTransferencia");
                });

            modelBuilder.Entity("Carfaith.Dominio.Modelo.Entidades.Ubicaciones", b =>
                {
                    b.Navigation("DetalleOrdenEgresos");

                    b.Navigation("DetalleOrdenIngresos");

                    b.Navigation("Stocks");

                    b.Navigation("TransferenciaUbicacionDestinos");

                    b.Navigation("TransferenciaUbicacionOrigens");
                });
#pragma warning restore 612, 618
        }
    }
}
